html { /* This rule first sets a global base font and font size for the whole page (since <html> is the parent element of the whole page, and all elements inside it inherit the same font-size and font-family): */
     font-size: 10px;
     font-family: 'Open Sans', sans-serif;
     background-color: #00539F; /*This rule sets a background color for the whole page.*/

}

h1 {
     font-size: 60px;
     text-align: center;
     margin: 0;
     padding: 20px 0;
     color: #00539F;
     text-shadow: 3px 3px 1px black;
}

p, li {
     font-size: 16px;
     line-height: 2;
     letter-spacing: 1px;
}

body {
     width: 600px; /* this forces the body to always be 600 pixels wide */
     margin: 0 auto; /* When you set two values on a property like margin or padding, the first value affects the element's top and bottom side (make it 0 in this case), and the second value the left and right side (here, auto is a special value that divides the available horizontal space evenly between left and right). You can also use one, three, or four values */
     background-color: #FF9500; /*this sets the element's background color. Above in html section gives one color for anything extending the full area outside of the body. this color applied here is for anything within the body. */
     padding: 0 20px 20px 20px; /* we have four values set on the padding, to make a bit of space around our content. This time we are setting no padding on the top of the body, and 20 pixels on the left, bottom and right. The values set top, right, bottom, left, in that order. As with margin, you can also use one, two or three values */
     border: 5px solid black; /* this simply sets a 5-pixelâ€“wide, solid black border on all sides of the body. */
}

img { /* we'll center the image to make it look better. We could use the margin: 0 auto trick again as we did earlier for the body, but we also need to do something else. The <body> element is block level, meaning it takes up space on the page and can have margin and other spacing values applied to it. Images, on the other hand, are inline elements, meaning they can't. So to apply margins to the image, we have to give the image block-level behavior using display: block;. The instructions above assume that you're using an image smaller than the width set on the body (600 pixels). If your image is larger, then it will overflow the body and spill out to the rest of the page. To rectify this, you can either 1) reduce the image's width using a graphics editor, or 2)  size the image using CSS by setting the width property on the <img> element with a smaller value (e.g., 400 px;). */
     display: block;
     margin: 0 auto;
}
